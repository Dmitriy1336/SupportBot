from aiogram import F, Router, types
from aiogram.types import Message
import keyboards as kb
import database.requests as rq
from aiogram.filters import Command
import re
import datetime

from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import CallbackQuery, InlineKeyboardButton


router = Router()


chat = ''
thread = ''
category_msg = int
isAns = False
chat_reply = ''









# –ö–û–ú–ê–ù–î–´
@router.message(Command('start')) # start
async def cmd_start(message: Message):
    chats = await rq.get_chats()
    if message.chat.id in chats:
        return
    else:
        banned_users = await rq.get_banned_users()
        reason = await rq.get_reason(message.from_user.id)
        if message.from_user.id in banned_users:
            await message.answer(text=f'<b>‚ö†Ô∏è –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ Admin Bot!\n\n‚õî –ü—Ä–∏—á–∏–Ω–∞: {reason}</b>', parse_mode='HTML')
        else:
            await rq.set_user(message.from_user.id)
            admin = await rq.get_admins()
            lead = await rq.get_leads()
            if message.from_user.id in admin or message.from_user.id in lead:
                await message.answer(f"<b>‚úåÔ∏è–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.first_name}!</b>\n\n"
                                     f"<b>üõ°Ô∏è Admin Bot —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.</b>\n\n"
                                     f"<b>üìö –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.</b>\n\n",
                                     reply_markup=await kb.main_admins(), parse_mode='HTML')
            else:
                await message.answer(f"<b>‚úåÔ∏è–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!</b>\n\n"
                                     f"<b>üõ°Ô∏è Admin Bot —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.</b>\n\n"
                                     f"<b>üìö –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.</b>\n\n",
                                     reply_markup=await kb.main(), parse_mode='HTML')

@router.callback_query(F.data == 'to_main')
async def main(callback: CallbackQuery):
    admin = await rq.get_admins()
    lead = await rq.get_leads()
    if callback.from_user.id in admin or callback.from_user.id in lead:
        await callback.message.edit_text(f"<b>‚úåÔ∏è–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {callback.from_user.first_name}!</b>\n\n"
                                     f"<b>üõ°Ô∏è Admin Bot —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.</b>\n\n"
                                     f"<b>üìö –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.</b>\n\n",
                             reply_markup=await kb.main_admins(), parse_mode='HTML')
    else:
        await callback.message.edit_text(f"<b>‚úåÔ∏è–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {callback.from_user.first_name}!</b>\n\n"
                                     f"<b>üõ°Ô∏è Admin Bot —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.</b>\n\n"
                                     f"<b>üìö –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.</b>\n\n",
                             reply_markup=await kb.main(), parse_mode='HTML')
    await callback.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é')
@router.message(Command('ban'))
async def ban_user(message: Message):
    chats = await rq.get_chats()
    blacklist = await rq.get_banned_users()
    if message.chat.id in chats:
        command = message.text.split(' ', maxsplit=2)
        tg_id = command[1]
        reason = command[2]
        if tg_id not in blacklist:
            current_date = datetime.datetime.now()
            current_date_string = current_date.strftime('%d.%m.%y | %H:%M:%S')
            await rq.give_ban(tg_id, reason, current_date_string)
            await message.answer(
                f'<b>‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ Admin Bot.\n\n‚õî –ü—Ä–∏—á–∏–Ω–∞: {reason}\n\nüïù –î–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {current_date_string}</b>',
                parse_mode='HTML')
            file_path = "/root/bots/supportbot/ban_img.jpg"
            await message.bot.send_photo(chat_id=tg_id, photo=types.FSInputFile(path=file_path), caption=f'<b>‚ö†Ô∏è –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º Admin Bot!\n\n‚õî –ü—Ä–∏—á–∏–Ω–∞: {reason}\n\nüïù –î–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {current_date_string}</b>', parse_mode='HTML')
        else:
            await message.answer(f'<b>‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ Admin Bot.</b>',
                             parse_mode='HTML')
@router.message(Command('unban'))
async def unban_user(message: Message):
    chats = await rq.get_chats()
    blacklist = await rq.get_banned_users()
    if message.chat.id in chats:
        if message.from_user.id in blacklist:
            command = message.text.split(' ', maxsplit=2)
            tg_id = command[1]
            reason = command[2]
            await rq.delete_ban(tg_id)
            await message.answer(f'<b>‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ Admin Bot.\n\nüîì –ü—Ä–∏—á–∏–Ω–∞: {reason}</b>', parse_mode='HTML')
        else:
            await message.answer(f'<b>üõ°Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ Admin Bot.</b>', parse_mode='HTML')

@router.message(Command('test'))
async def handle_test_command(message: Message):
    await message.reply_sticker('CAACAgIAAxkBAAEMUpVmbel9tT4d-LxSKAzFgOFBEWneyAACvAwAAocoMEntN5GZWCFoBDUE')


# –†–ï–ê–ì–ò–†–û–í–ê–ù–ò–Ø –ù–ê –ö–ù–û–ü–ö–ò

@router.callback_query(F.data == 'forms')
async def serv(callback: CallbackQuery):
    global category_msg
    if chat != '' or chat == 'None':
        admins = await rq.get_admins()
        if callback.from_user.id not in admins:
            item_data = await rq.get_category_item(category_msg, True)
        else:
            item_data = await rq.get_category_item(category_msg, False)

        kb_back = InlineKeyboardBuilder()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        kb_back.row(InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='to_main'))  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
        await callback.message.edit_text(f'<b>{item_data.description}</b>', parse_mode='HTML',
                                         reply_markup=kb_back.as_markup())
        await callback.answer()
    else:
        await callback.message.edit_text('<b>üìã –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:</b>', reply_markup=await kb.categories(), parse_mode='HTML')
        await callback.answer()
@router.callback_query(F.data == 'info_user')
async def settings(callback: CallbackQuery):
    await callback.message.edit_text('<b>üñ•  –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö Admin Bot!\n\n'
                                     
                                  '‚≠êÔ∏è –î–∞–Ω–Ω—ã–π –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n'
                                     
                                  'üß† –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å –¥–æ—Å—Ç—É–ø–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n'
                                     
                                  '1. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –∞–Ω–∫–µ—Ç—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É —Å–µ—Ä–≤–µ—Ä–∞.\n'
                                  '2. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–¥–∏–∞-–∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.\n'
                                  '3. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É –æ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞.\n'
                                  '4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –±–æ—Ç–∞ "–æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏": –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –º–µ–∂–¥—É –≤–∞–º–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥ —Å Admin Bot!\n\n'
                                     
                                  'ü•≥ <u>–í—ã - –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é —Å Admin Bot –æ–ø–∏—Å–∞–Ω—ã –Ω–∏–∂–µ:</u>\n\n'
                                
                                  '1Ô∏è‚É£ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã";\n'
                                  '2Ô∏è‚É£ –í—ã–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏;\n'
                                  '3Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É, –∫–æ—Ç–æ—Ä—É—é –≤–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç Admin Bot.\n\n'
                                
                                  'üöÄ –ü—Ä–æ—Å—Ç–æ –∏ —É–¥–æ–±–Ω–æ –≤–º–µ—Å—Ç–µ —Å Admin Bot!\n\n'
                                
                                   'üîó –ö–æ–Ω—Ç–∞–∫—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ - @young_keef</b>', parse_mode='HTML', reply_markup=await kb.back())

    await callback.answer()


@router.callback_query(F.data.startswith('category_'))
async def category(callback: CallbackQuery):
    global chat, thread, category_msg
    admins = await rq.get_admins()
    if callback.from_user.id not in admins:
        item_data = await rq.get_category_item(callback.data.split('_')[1], True)
    else:
        item_data = await rq.get_category_item(callback.data.split('_')[1], False)

    chat = item_data.chat
    thread = item_data.thread
    category_msg = item_data.category
    kb_back = InlineKeyboardBuilder()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    kb_back.row(InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='to_main'))  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
    await callback.message.edit_text(f'<b>{item_data.description}</b>', parse_mode='HTML',
                                     reply_markup=kb_back.as_markup())
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–µ—Ä–≤–µ—Ä')


@router.message()
async def send(message: Message):
    global chat, thread, category_msg, chat_reply
    banned_users = await rq.get_banned_users()
    reason = await rq.get_reason(message.from_user.id)
    chats = await rq.get_chats()
    if message.from_user.id in banned_users:
        await message.answer(text=f'<b>‚ö†Ô∏è –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ Admin Bot!\n\n‚õî –ü—Ä–∏—á–∏–Ω–∞: {reason}</b>', parse_mode='HTML')
    elif message.chat.id in chats:
        try:
            msg_form = re.search('–∞–Ω–∫–µ—Ç–∞!(.*?)üßæ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', message.reply_to_message.text.strip().replace('\n', '')).group(1)
        except:
            msg_form = re.search('–∞–Ω–∫–µ—Ç–∞!(.*?)üßæ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:',
                                 message.reply_to_message.caption.strip().replace('\n', '')).group(1)

        message_reply = await rq.get_messages(msg_form)
        message_reply_id = await rq.get_messages_reply(msg_form)
        if str(msg_form) == str(message_reply):
            try:
                user_id = re.findall(r'\w+$', message.reply_to_message.text)
            except:
                user_id = re.findall(r'\w+$', message.reply_to_message.caption)
            if message.photo == None:
                await message.bot.send_message(reply_to_message_id=message_reply_id, chat_id=str(user_id[0]),
                                               text=f'<b>{message.text}</b>', parse_mode='HTML')
                await message.answer(text=f'<b>‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.</b>',
                                     parse_mode='HTML')
            else:
                await message.bot.send_photo(reply_to_message_id=message_reply_id, chat_id=str(user_id[0]), photo=message.photo[-1].file_id, caption=f'<b>{message.caption}</b>', parse_mode='HTML')
                await message.answer(text=f'<b>‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.</b>',
                                     parse_mode='HTML')
    elif chat != '':
        if message.photo == None:
            msg_to_db = message.text.strip().replace('\n', '')
            await rq.set_messages(tg_id=message.from_user.id, username=f'@{message.from_user.username}',
                                  message=msg_to_db,
                                  category=category_msg, msg_id=message.message_id)
            await message.bot.send_message(chat_id=chat, text=f'<b>üÜï –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞!\n\n{message.text}\n\nüßæ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: @{message.from_user.username}, ID: <code>{message.from_user.id}</code></b>', message_thread_id=int(thread), parse_mode='HTML', reply_markup=await kb.admin_msg(tg_id=message.from_user.id))
            await message.answer(text='<b>‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º Admin Bot.</b>', parse_mode='HTML', reply_markup=await kb.back())
        else:
            msg_to_db = message.caption.strip().replace('\n', '')
            await rq.set_messages(tg_id=message.from_user.id, username=f'@{message.from_user.username}',
                                  message=msg_to_db,
                                  category=category_msg, msg_id=message.message_id)
            await message.bot.send_photo(chat_id=chat, photo=message.photo[-1].file_id, caption=f'<b>üÜï –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞!\n\n{message.caption}\n\nüßæ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: @{message.from_user.username}, ID: <code>{message.from_user.id}</code></b>' ,message_thread_id=int(thread), parse_mode='HTML', reply_markup=await kb.admin_msg(tg_id=message.from_user.id))
            await message.answer(text='<b>‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º Admin Bot.</b>',
                                 parse_mode='HTML', reply_markup=await kb.back())



